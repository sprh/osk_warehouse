// Mocks generated by Mockito 5.4.4 from annotations
// in osk_warehouse/test/unit/products/products_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i5;

import 'package:mockito/mockito.dart' as _i1;
import 'package:osk_warehouse/features/products/data/api/api.dart' as _i4;
import 'package:osk_warehouse/features/products/data/api/models/create_product_dto.dart'
    as _i7;
import 'package:osk_warehouse/features/products/data/api/models/product_dto.dart'
    as _i3;
import 'package:osk_warehouse/features/products/data/api/models/product_list_dto.dart'
    as _i2;
import 'package:osk_warehouse/features/products/data/api/models/update_product_dto.dart'
    as _i6;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeProductListDto_0 extends _i1.SmartFake
    implements _i2.ProductListDto {
  _FakeProductListDto_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeProductDto_1 extends _i1.SmartFake implements _i3.ProductDto {
  _FakeProductDto_1(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [ProductApi].
///
/// See the documentation for Mockito's code generation for more information.
class MockProductApi extends _i1.Mock implements _i4.ProductApi {
  MockProductApi() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i5.Future<_i2.ProductListDto> getProductList(
    String? searchCategory,
    String? searchText,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #getProductList,
          [],
        ),
        returnValue: _i5.Future<_i2.ProductListDto>.value(_FakeProductListDto_0(
          this,
          Invocation.method(
            #getProductList,
            [],
          ),
        )),
      ) as _i5.Future<_i2.ProductListDto>);

  @override
  _i5.Future<_i2.ProductListDto> getProductListByWarehouse(
    String? warehouseId,
    String? searchCategory,
    String? searchText,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #getProductListByWarehouse,
          [warehouseId],
        ),
        returnValue: _i5.Future<_i2.ProductListDto>.value(_FakeProductListDto_0(
          this,
          Invocation.method(
            #getProductListByWarehouse,
            [warehouseId],
          ),
        )),
      ) as _i5.Future<_i2.ProductListDto>);

  @override
  _i5.Future<void> deleteProduct(String? id) => (super.noSuchMethod(
        Invocation.method(
          #deleteProduct,
          [id],
        ),
        returnValue: _i5.Future<void>.value(),
        returnValueForMissingStub: _i5.Future<void>.value(),
      ) as _i5.Future<void>);

  @override
  _i5.Future<_i3.ProductDto> updateProduct(_i6.UpdateProductDto? dto) =>
      (super.noSuchMethod(
        Invocation.method(
          #updateProduct,
          [dto],
        ),
        returnValue: _i5.Future<_i3.ProductDto>.value(_FakeProductDto_1(
          this,
          Invocation.method(
            #updateProduct,
            [dto],
          ),
        )),
      ) as _i5.Future<_i3.ProductDto>);

  @override
  _i5.Future<_i3.ProductDto> getProduct(String? id) => (super.noSuchMethod(
        Invocation.method(
          #getProduct,
          [id],
        ),
        returnValue: _i5.Future<_i3.ProductDto>.value(_FakeProductDto_1(
          this,
          Invocation.method(
            #getProduct,
            [id],
          ),
        )),
      ) as _i5.Future<_i3.ProductDto>);

  @override
  _i5.Future<_i3.ProductDto> createProduct(
    _i7.CreateProductDto? dto,
    String? idempotencyToken,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #createProduct,
          [
            dto,
            idempotencyToken,
          ],
        ),
        returnValue: _i5.Future<_i3.ProductDto>.value(_FakeProductDto_1(
          this,
          Invocation.method(
            #createProduct,
            [
              dto,
              idempotencyToken,
            ],
          ),
        )),
      ) as _i5.Future<_i3.ProductDto>);
}
